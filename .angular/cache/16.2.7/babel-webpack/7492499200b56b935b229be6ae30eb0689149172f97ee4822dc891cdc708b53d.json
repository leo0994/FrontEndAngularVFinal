{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let TransporterListComponent = class TransporterListComponent {\n  constructor(transporterService, modalService) {\n    this.transporterService = transporterService;\n    this.modalService = modalService;\n    this.transporters = [];\n  }\n  ngOnInit() {\n    this.transporterService.getTransporters().subscribe(data => {\n      this.transporters = data;\n    }, error => {\n      console.error('Error fetching transporters', error);\n    });\n  }\n  updateTransporter(transporter) {\n    this.transporterService.updateTransporter(transporter).subscribe(updatedTransporter => {\n      // Actualizaci贸n exitosa, puedes manejar la respuesta como lo necesites\n      console.log('Transporter updated:', updatedTransporter);\n    }, error => {\n      console.error('Error updating transporter', error);\n    });\n  }\n  openEditModal(transporterId) {\n    // Llama al servicio para obtener los detalles del transportista\n    this.transporterService.getTransporterDetails(transporterId).subscribe(transporter => {\n      // Abre el modal con los detalles del transportista para edici贸n\n      const modalRef = this.modalService.open(TransporterEditModalComponent, {\n        size: 'lg'\n      });\n      modalRef.componentInstance.transporter = transporter;\n    });\n  }\n};\nTransporterListComponent = __decorate([Component({\n  selector: 'app-transporter-list',\n  templateUrl: './transporter-list.component.html',\n  styleUrls: ['./transporter-list.component.css']\n})], TransporterListComponent);","map":{"version":3,"names":["Component","TransporterListComponent","constructor","transporterService","modalService","transporters","ngOnInit","getTransporters","subscribe","data","error","console","updateTransporter","transporter","updatedTransporter","log","openEditModal","transporterId","getTransporterDetails","modalRef","open","TransporterEditModalComponent","size","componentInstance","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/olmansantamaria/IdeaProjects/Patrones-Proyecto/front/laca/src/app/ui-components/transporter/transporter-list/transporter-list.component.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {TransporterService} from \"../../../logic-components/services/TransporterService\";\nimport {Transporter} from \"../../../logic-components/classes/Transporter\";\n\n@Component({\n  selector: 'app-transporter-list',\n  templateUrl: './transporter-list.component.html',\n  styleUrls: ['./transporter-list.component.css']\n})\nexport class TransporterListComponent implements OnInit {\n  transporters: Transporter[] = [];\n\n  constructor(private transporterService: TransporterService, private modalService: NgbModal) {}\n\n  ngOnInit() {\n    this.transporterService.getTransporters().subscribe(\n      (data) => {\n        this.transporters = data;\n      },\n      (error) => {\n        console.error('Error fetching transporters', error);\n      }\n    );\n  }\n\n  updateTransporter(transporter: Transporter) {\n    this.transporterService.updateTransporter(transporter).subscribe(\n      (updatedTransporter) => {\n        // Actualizaci贸n exitosa, puedes manejar la respuesta como lo necesites\n        console.log('Transporter updated:', updatedTransporter);\n      },\n      (error) => {\n        console.error('Error updating transporter', error);\n      }\n    );\n  }\n\n  openEditModal(transporterId: number) {\n    // Llama al servicio para obtener los detalles del transportista\n    this.transporterService.getTransporterDetails(transporterId).subscribe((transporter: any) => {\n      // Abre el modal con los detalles del transportista para edici贸n\n      const modalRef = this.modalService.open(TransporterEditModalComponent, { size: 'lg' });\n      modalRef.componentInstance.transporter = transporter;\n    });\n  }\n\n}\n\n"],"mappings":";AAAA,SAAQA,SAAS,QAAe,eAAe;AASxC,WAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAGnCC,YAAoBC,kBAAsC,EAAUC,YAAsB;IAAtE,KAAAD,kBAAkB,GAAlBA,kBAAkB;IAA8B,KAAAC,YAAY,GAAZA,YAAY;IAFhF,KAAAC,YAAY,GAAkB,EAAE;EAE6D;EAE7FC,QAAQA,CAAA;IACN,IAAI,CAACH,kBAAkB,CAACI,eAAe,EAAE,CAACC,SAAS,CAChDC,IAAI,IAAI;MACP,IAAI,CAACJ,YAAY,GAAGI,IAAI;IAC1B,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,CACF;EACH;EAEAE,iBAAiBA,CAACC,WAAwB;IACxC,IAAI,CAACV,kBAAkB,CAACS,iBAAiB,CAACC,WAAW,CAAC,CAACL,SAAS,CAC7DM,kBAAkB,IAAI;MACrB;MACAH,OAAO,CAACI,GAAG,CAAC,sBAAsB,EAAED,kBAAkB,CAAC;IACzD,CAAC,EACAJ,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CACF;EACH;EAEAM,aAAaA,CAACC,aAAqB;IACjC;IACA,IAAI,CAACd,kBAAkB,CAACe,qBAAqB,CAACD,aAAa,CAAC,CAACT,SAAS,CAAEK,WAAgB,IAAI;MAC1F;MACA,MAAMM,QAAQ,GAAG,IAAI,CAACf,YAAY,CAACgB,IAAI,CAACC,6BAA6B,EAAE;QAAEC,IAAI,EAAE;MAAI,CAAE,CAAC;MACtFH,QAAQ,CAACI,iBAAiB,CAACV,WAAW,GAAGA,WAAW;IACtD,CAAC,CAAC;EACJ;CAED;AArCYZ,wBAAwB,GAAAuB,UAAA,EALpCxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,C,EACW1B,wBAAwB,CAqCpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}