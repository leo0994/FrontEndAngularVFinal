{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../logic-components/services/TransporterService\";\nfunction TransporterListComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\")(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function TransporterListComponent_div_2_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const transporter_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateTransporter(transporter_r1));\n    });\n    i0.ɵɵtext(9, \"Update\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const transporter_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"ID: \", transporter_r1.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Name: \", transporter_r1.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Company: \", transporter_r1.company, \"\");\n  }\n}\nexport class TransporterListComponent {\n  constructor(transporterService) {\n    this.transporterService = transporterService;\n    this.transporters = [];\n  }\n  ngOnInit() {\n    this.transporterService.getTransporters().subscribe(data => {\n      this.transporters = data;\n    }, error => {\n      console.error('Error fetching transporters', error);\n    });\n  }\n  updateTransporter(transporter) {\n    this.transporterService.updateTransporter(transporter).subscribe(updatedTransporter => {\n      // Actualización exitosa, puedes manejar la respuesta como lo necesites\n      console.log('Transporter updated:', updatedTransporter);\n    }, error => {\n      console.error('Error updating transporter', error);\n    });\n  }\n  static #_ = this.ɵfac = function TransporterListComponent_Factory(t) {\n    return new (t || TransporterListComponent)(i0.ɵɵdirectiveInject(i1.TransporterService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TransporterListComponent,\n    selectors: [[\"app-transporter-list-component\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n    template: function TransporterListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"Lista de Transportistas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, TransporterListComponent_div_2_Template, 10, 3, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.transporters);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TransporterListComponent_div_2_Template_button_click_8_listener","restoredCtx","ɵɵrestoreView","_r3","transporter_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","updateTransporter","ɵɵadvance","ɵɵtextInterpolate1","id","name","company","TransporterListComponent","constructor","transporterService","transporters","ngOnInit","getTransporters","subscribe","data","error","console","transporter","updatedTransporter","log","_","ɵɵdirectiveInject","i1","TransporterService","_2","selectors","decls","vars","consts","template","TransporterListComponent_Template","rf","ctx","ɵɵtemplate","TransporterListComponent_div_2_Template","ɵɵproperty"],"sources":["/Users/olmansantamaria/IdeaProjects/Patrones-Proyecto/front/laca/src/app/ui-components/transporter-list-component/transporter-list-component.component.ts","/Users/olmansantamaria/IdeaProjects/Patrones-Proyecto/front/laca/src/app/ui-components/transporter-list-component/transporter-list-component.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {TransporterService} from \"../../logic-components/services/TransporterService\";\nimport {Transporter} from \"../../logic-components/classes/Transporter\";\n\n@Component({\n  selector: 'app-transporter-list-component',\n  templateUrl: './transporter-list-component.component.html',\n  styleUrls: ['./transporter-list-component.component.css']\n})\nexport class TransporterListComponent implements OnInit {\n  transporters: Transporter[] = [];\n\n  constructor(private transporterService: TransporterService) {}\n\n  ngOnInit() {\n    this.transporterService.getTransporters().subscribe(\n      (data) => {\n        this.transporters = data;\n      },\n      (error) => {\n        console.error('Error fetching transporters', error);\n      }\n    );\n  }\n\n  updateTransporter(transporter: Transporter) {\n    this.transporterService.updateTransporter(transporter).subscribe(\n      (updatedTransporter) => {\n        // Actualización exitosa, puedes manejar la respuesta como lo necesites\n        console.log('Transporter updated:', updatedTransporter);\n      },\n      (error) => {\n        console.error('Error updating transporter', error);\n      }\n    );\n  }\n}\n","<p>Lista de Transportistas</p>\n\n<!-- transporter-list.component.html -->\n<div *ngFor=\"let transporter of transporters\">\n  <div>\n    <p>ID: {{ transporter.id }}</p>\n    <p>Name: {{ transporter.name }}</p>\n    <p>Company: {{ transporter.company }}</p>\n    <button (click)=\"updateTransporter(transporter)\">Update</button>\n  </div>\n</div>\n"],"mappings":";;;;;ICGAA,EAAA,CAAAC,cAAA,UAA8C;IAEvCD,EAAA,CAAAE,MAAA,GAAwB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAC/BH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAA4B;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACnCH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAkC;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACzCH,EAAA,CAAAC,cAAA,gBAAiD;IAAzCD,EAAA,CAAAI,UAAA,mBAAAC,gEAAA;MAAA,MAAAC,WAAA,GAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA;MAAA,MAAAC,cAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAASZ,EAAA,CAAAa,WAAA,CAAAF,MAAA,CAAAG,iBAAA,CAAAL,cAAA,CAA8B;IAAA,EAAC;IAACT,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAH7DH,EAAA,CAAAe,SAAA,GAAwB;IAAxBf,EAAA,CAAAgB,kBAAA,SAAAP,cAAA,CAAAQ,EAAA,KAAwB;IACxBjB,EAAA,CAAAe,SAAA,GAA4B;IAA5Bf,EAAA,CAAAgB,kBAAA,WAAAP,cAAA,CAAAS,IAAA,KAA4B;IAC5BlB,EAAA,CAAAe,SAAA,GAAkC;IAAlCf,EAAA,CAAAgB,kBAAA,cAAAP,cAAA,CAAAU,OAAA,KAAkC;;;ADEzC,OAAM,MAAOC,wBAAwB;EAGnCC,YAAoBC,kBAAsC;IAAtC,KAAAA,kBAAkB,GAAlBA,kBAAkB;IAFtC,KAAAC,YAAY,GAAkB,EAAE;EAE6B;EAE7DC,QAAQA,CAAA;IACN,IAAI,CAACF,kBAAkB,CAACG,eAAe,EAAE,CAACC,SAAS,CAChDC,IAAI,IAAI;MACP,IAAI,CAACJ,YAAY,GAAGI,IAAI;IAC1B,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,CACF;EACH;EAEAd,iBAAiBA,CAACgB,WAAwB;IACxC,IAAI,CAACR,kBAAkB,CAACR,iBAAiB,CAACgB,WAAW,CAAC,CAACJ,SAAS,CAC7DK,kBAAkB,IAAI;MACrB;MACAF,OAAO,CAACG,GAAG,CAAC,sBAAsB,EAAED,kBAAkB,CAAC;IACzD,CAAC,EACAH,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CACF;EACH;EAAC,QAAAK,CAAA,G;qBA1BUb,wBAAwB,EAAApB,EAAA,CAAAkC,iBAAA,CAAAC,EAAA,CAAAC,kBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAxBjB,wBAAwB;IAAAkB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTrC5C,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,8BAAuB;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAG9BH,EAAA,CAAA8C,UAAA,IAAAC,uCAAA,kBAOM;;;QAPuB/C,EAAA,CAAAe,SAAA,GAAe;QAAff,EAAA,CAAAgD,UAAA,YAAAH,GAAA,CAAAtB,YAAA,CAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}