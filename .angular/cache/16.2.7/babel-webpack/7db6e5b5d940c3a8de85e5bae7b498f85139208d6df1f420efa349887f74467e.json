{"ast":null,"code":"import { BehaviorSubject, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TransporterService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/transporters';\n    this.transportersSubject = new BehaviorSubject([]);\n    this.transporters$ = this.transportersSubject.asObservable();\n    this.getTransporters();\n  }\n  getTransporters() {\n    this.http.get(this.apiUrl).subscribe(initialTransporters => {\n      this.transportersSubject.next(initialTransporters);\n    }, error => {\n      console.error('Error al obtener la lista de transportistas:', error);\n    });\n  }\n  updateTransporter(updatedTransporter) {\n    const url = `${this.apiUrl}/${updatedTransporter.id}`;\n    return this.http.put(url, updatedTransporter).pipe(tap(response => {\n      const currentTransporters = this.transportersSubject.value;\n      const index = currentTransporters.findIndex(t => t.id === updatedTransporter.id);\n      if (index !== -1) {\n        currentTransporters[index] = response;\n        this.transportersSubject.next([...currentTransporters]);\n      }\n    }));\n  }\n  addTransporter(newTransporter) {\n    return this.http.post(this.apiUrl, newTransporter).pipe(tap(response => {\n      let currentTransporters = this.transportersSubject.value;\n      currentTransporters.push(response);\n      this.transportersSubject.next([...currentTransporters]);\n    }));\n  }\n  getTransporterDetails(id) {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.get(url);\n  }\n  deleteTransporter(transporterId) {\n    const deleteUrl = `${this.apiUrl}/${transporterId}`;\n    return this.http.delete(deleteUrl).pipe(tap(response => {\n      let currentTransporters = this.transportersSubject.value;\n      currentTransporters.push(response);\n      this.transportersSubject.next([...currentTransporters]);\n    }));\n  }\n  static #_ = this.ɵfac = function TransporterService_Factory(t) {\n    return new (t || TransporterService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TransporterService,\n    factory: TransporterService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","tap","TransporterService","constructor","http","apiUrl","transportersSubject","transporters$","asObservable","getTransporters","get","subscribe","initialTransporters","next","error","console","updateTransporter","updatedTransporter","url","id","put","pipe","response","currentTransporters","value","index","findIndex","t","addTransporter","newTransporter","post","push","getTransporterDetails","deleteTransporter","transporterId","deleteUrl","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/olmansantamaria/IdeaProjects/Patrones-Proyecto/front/laca/src/app/logic-components/services/TransporterService.ts"],"sourcesContent":["// transporter.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {BehaviorSubject, Observable, Subject, tap} from 'rxjs';\nimport {Transporter} from \"../classes/Transporter\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransporterService {\n  private apiUrl = 'http://localhost:8080/transporters';\n  private transportersSubject = new BehaviorSubject<Transporter[]>([]);\n  transporters$ = this.transportersSubject.asObservable();\n\n  constructor(private http: HttpClient) {\n    this.getTransporters();\n  }\n\n  getTransporters(): void{\n    this.http.get<Transporter[]>(this.apiUrl).subscribe(\n      (initialTransporters) => {\n        this.transportersSubject.next(initialTransporters);\n      },\n      (error) => {\n        console.error('Error al obtener la lista de transportistas:', error);\n      }\n    );\n  }\n\n  updateTransporter(updatedTransporter: Transporter): Observable<Transporter> {\n    const url = `${this.apiUrl}/${updatedTransporter.id}`;\n    return this.http.put<Transporter>(url, updatedTransporter).pipe(\n      tap((response) => {\n        const currentTransporters = this.transportersSubject.value;\n        const index = currentTransporters.findIndex(t => t.id === updatedTransporter.id);\n\n        if (index !== -1) {\n          currentTransporters[index] = response;\n          this.transportersSubject.next([...currentTransporters]);\n        }\n      })\n    );\n  }\n\n  addTransporter(newTransporter: Transporter): Observable<Transporter> {\n    return this.http.post<Transporter>(this.apiUrl, newTransporter).pipe(\n      tap((response): void => {\n        let currentTransporters: Transporter[] = this.transportersSubject.value;\n        currentTransporters.push(response);\n        this.transportersSubject.next([...currentTransporters]);\n      })\n    );\n  }\n\n  getTransporterDetails(id: number): Observable<Transporter> {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.get<Transporter>(url);\n  }\n\n  deleteTransporter(transporterId: number): Observable<void> {\n    const deleteUrl = `${this.apiUrl}/${transporterId}`;\n    return this.http.delete<void>(deleteUrl).pipe(\n      tap((response): void => {\n        let currentTransporters: Transporter[] = this.transportersSubject.value;\n        currentTransporters.push(response);\n        this.transportersSubject.next([...currentTransporters]);\n      })\n    );\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}