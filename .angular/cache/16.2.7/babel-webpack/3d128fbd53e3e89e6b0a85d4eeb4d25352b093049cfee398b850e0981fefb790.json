{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TransporterService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/transporters';\n  }\n  getTransporters() {\n    return this.http.get(this.apiUrl);\n  }\n  updateTransporter(transporter) {\n    const url = `${this.apiUrl}/${transporter.id}`;\n    return this.http.put(url, transporter);\n  }\n  addTransporter(newTransporter) {\n    return this.http.post(this.apiUrl, newTransporter);\n  }\n  getTransporterDetails(id) {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.get(url);\n  }\n  static #_ = this.ɵfac = function TransporterService_Factory(t) {\n    return new (t || TransporterService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TransporterService,\n    factory: TransporterService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["TransporterService","constructor","http","apiUrl","getTransporters","get","updateTransporter","transporter","url","id","put","addTransporter","newTransporter","post","getTransporterDetails","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/olmansantamaria/IdeaProjects/Patrones-Proyecto/front/laca/src/app/logic-components/services/TransporterService.ts"],"sourcesContent":["// transporter.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Transporter} from \"../classes/Transporter\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransporterService {\n  private apiUrl = 'http://localhost:8080/transporters';\n\n  constructor(private http: HttpClient) {}\n\n  getTransporters(): Observable<Transporter[]> {\n    return this.http.get<Transporter[]>(this.apiUrl);\n  }\n\n  updateTransporter(transporter: Transporter): Observable<Transporter> {\n    const url = `${this.apiUrl}/${transporter.id}`;\n    return this.http.put<Transporter>(url, transporter);\n  }\n\n  addTransporter(newTransporter: Transporter): Observable<Transporter> {\n    return this.http.post<Transporter>(this.apiUrl, newTransporter);\n  }\n\n  getTransporterDetails(id: number): Observable<Transporter> {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.get<Transporter>(url);\n  }\n\n}\n"],"mappings":";;AASA,OAAM,MAAOA,kBAAkB;EAG7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,oCAAoC;EAEd;EAEvCC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAgB,IAAI,CAACF,MAAM,CAAC;EAClD;EAEAG,iBAAiBA,CAACC,WAAwB;IACxC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,IAAII,WAAW,CAACE,EAAE,EAAE;IAC9C,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAcF,GAAG,EAAED,WAAW,CAAC;EACrD;EAEAI,cAAcA,CAACC,cAA2B;IACxC,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAc,IAAI,CAACV,MAAM,EAAES,cAAc,CAAC;EACjE;EAEAE,qBAAqBA,CAACL,EAAU;IAC9B,MAAMD,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,IAAIM,EAAE,EAAE;IAClC,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAcG,GAAG,CAAC;EACxC;EAAC,QAAAO,CAAA,G;qBArBUf,kBAAkB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBpB,kBAAkB;IAAAqB,OAAA,EAAlBrB,kBAAkB,CAAAsB,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}